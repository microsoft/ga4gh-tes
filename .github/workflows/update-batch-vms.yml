name: "UpdateBatchVmList"

on:
  schedule:
    - cron: '15 10 * * 1'
  workflow_dispatch:

jobs:
  update-batch-vms:
    name: Update Batch VMs db
    runs-on: ubuntu-latest
    environment: test

    steps:
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'

    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Setup dotnet
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build

    - name: Run GenerateBatchVmSkus
      run: ./src/GenerateBatchVmSkus/bin/Debug/net7.0/GenerateBatchVmSkus --subscriptionId ${{ secrets.AZURE_SUBSCRIPTION_ID }} --outputFilePath src/TesApi.Web/BatchSupportedVmSizeInformation.json

    - run: if (( $(git diff src/TesApi.Web/BatchSupportedVmSizeInformation.json | wc -l) > 0 )); then echo "UPDATE_PR=True" >> $GITHUB_ENV; fi

    - name: Checkout branch, commit and push
      if: env.UPDATE_PR != null
      run: |
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git checkout -b update-batch-vms
        git add src/TesApi.Web/BatchSupportedVmSizeInformation.json
        git commit -m "Update src/TesApi.Web/BatchSupportedVmSizeInformation.json"
        git push --force -u origin update-batch-vms
        
    - run: if (( $(gh pr list -H update-batch-vms | wc -l) == 0 )); then echo "SUBMIT_PR=True" >> $GITHUB_ENV; fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: create pull request
      if: env.UPDATE_PR != null && env.SUBMIT_PR != null
      run: gh pr create --assignee jsaun -B develop -H update-batch-vms --title 'Update BatchSupportedVmSizeInformation.json' --body 'Update BatchSupportedVmSizeInformation.json'
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
